# Builds using maven
# Pass the arguments you wish to run to maven_commands variable, default command will be mvn install
---
name: Maven

on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    strategy:
      matrix:
        java: [1.8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      maven_commands: install # default is install
      artifact_dir: target/*
      publishing_target: github
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Create publishing target
        if: ${{ env.publishing_target }} != ''
        run: touch ${{ env.publishing_target }}.txt
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts from build
        uses: actions/download-artifact@v2
      - name: List artifacts
        id: get_target
        run: |
          ls -R
          files=(`find ./ -maxdepth 1 -name "*.txt"`)
          if [ ${#files[@]} -gt 0 ]; then
            target="$(basename ${values[0]} .txt)"
            echo ::set-output name=publishing_target::$target
          fi
      - name: Upload binaries to release
        if: startsWith(github.ref, 'refs/tags') && ${{ steps.get_target.outputs.publishing_target }} =='github'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
